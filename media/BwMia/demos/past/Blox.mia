;
; Blox : Mia Blocks World Implementation
;
(persona Blox
	(mode main
	)
	(mode idle
		(assert (
			(:state topic ?g)
			(?g type goal)
			(not(?g is achieved))		
			-->
			(:agent achieve ?g)
			)
			==>
			main
			==>
			main
		)
	)	

(op AllGoals (?g is achieved)
	(mode main
		(assert (
			(?g is achieved)
			(Goal-1 is achieved)
			(Goal-2 is achieved)
			-->
			)
			==>
			halt
			==>
			failure
		)
	)
)
(op StackerPropose (:agent achieve ?g)
	(mode guard 
		(assert (
			(?g object ?b1)
			(?g destination ?b2)
			(?b1 on-top ?b2)
			-->
			(?g is achieved)
			)
			==>
			failure
			==>
			main
		)
	)
	(mode main
		(propose (
			(?g object ?b1)
			(?g destination ?b2)
			-->
			((:agent stack ?b1)
				(destination ?b2)
			)
			)
			==>
			success
			==>
			failure
		)
	)
)
(op StateElab (:state type state)
	(mode main
		(assert (
			-->
			(:state is good)
			)
			==>
			success
			==>
			failure
		)
	)
)
(op ClearPropose (:agent clear ?x)
	(mode main
		(propose (
			(?x beneath ?y)
			(:state topic ?z)		
			(?z is clear)
			(?z <> ?x)
			(?z <> ?y)
			-->
			((:agent stack ?y)
				(destination ?z)
			)
			)
			==>		
			success
			==>
			failure
		)
	)
)
(op StackerApply (:agent stack ?x)
	(mode guard1
		(propose (
			(not(?x is clear))
			-->
			(:agent clear ?x)
			)
			==>
			failure
			==>
			guard2
		)
	)
	(mode guard2
		(propose (
			(:fact destination ?y)
			(not(?y is clear))
			-->
			(:agent clear ?y)
			)
			==>
			failure
			==>
			main
		)
	)
	(mode main
		(retract (
			(?x on-top ?z)
			-->
			(?x on-top ?z)
			)
		)
		(assert (
			(:fact destination ?y)
			-->
			(?x on-top ?y)
			)
			==>
			success
			==>
			failure
		)
	)
)
(op NotOnTopElab (?x on-top ?y -1)
	(mode main
		(retract (
			(?y beneath ?x)
			-->
			(?y beneath ?x)
			)
		)
		(assert (
			-->
			(?y is clear)
			)
			==>
			success
			==>
			failure	
		)
	)
)
(op OntopElab (?x on-top ?y)
	(mode main
		(retract (
			(?y type block)		
			(?y is clear)
			-->
			(?y is clear)
			)
		)
		(assert (
			(?x on-top ?y)
			-->
			(?y beneath ?x)
			)
			==>
			success
			==>
			failure
		)
	)
)
)
(problem Blox
	(concept Table-1
		(type table)
		(is clear)
	)
	(concept Block-1
		(type block)
		(on-top Table-1)
		(is clear)
	)
	(concept Block-2
		(type block)
		(on-top Block-1)
		(is clear)
	)
	(concept Block-3
		(type block)
		(on-top Block-2)
		(is clear)
	)
	(concept Goal-1
		(type goal)
		(action move)
		(object Block-1)
		(destination Block-2)
	)
	(concept Goal-2
		(type goal)
		(action move)
		(object Block-2)
		(destination Block-3)
	)
)